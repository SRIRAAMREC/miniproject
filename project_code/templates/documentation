1. index.html: Transportation Cost Prediction Form
This HTML file provides a user interface for predicting transportation costs based on several input factors:

Header and Structure:
Sets up a webpage with the title "Transportation Cost Prediction."
Uses a responsive style with a clean, centered layout.
Top Bar with Buttons:

Contains a top bar with two buttons:
MAP Button: Links to a map page (/mapper).
Logout Button: Redirects to the logout URL (/logout).
Form Fields:

Inputs for start location, destination, distance (km), fuel efficiency, fuel cost, and vehicle type.
Vehicle Type Dropdown: Allows selection of car, truck, or motorbike.
Submit Button: Triggers cost prediction.
JavaScript Functionality:

On form submission, the script captures input values and makes a POST request to /predict for cost prediction.
Displays the predicted cost in the result area.
This file serves as a user-friendly interface for transportation cost predictions, with an organized layout and easy navigation options​(index).

2. red.html: GraphHopper Map Viewer
This file is designed to display a route on the GraphHopper map service:

Header and Structure:

Contains a header with the title "GraphHopper Map."
The page centers a container on the screen with a minimalistic design.
Content:

Displays a heading "GraphHopper Map."
Provides a brief message instructing users to click the link to view the route.
Route Link:

A clickable link, dynamically generated by the {{ gh_url }} placeholder, opens the GraphHopper map in a new tab.
This file offers a simple and user-friendly interface for accessing a map route, ideal for applications using GraphHopper to display navigation routes​(red).

3. username.html: Login Page
This HTML file provides a basic login form interface:

Header and Structure:

Contains a title "Login Page."
Uses an external stylesheet for styling (style.css).
Form Fields:

Username and Password fields, both required.
Error Handling: Displays an error message if login fails ({{ error }} placeholder).
Submit Button:

Submits the form using a POST request.
Styling:

Uses a minimalist style with centered form, input styling, and hover effects for the button.
Displays error messages in red.
